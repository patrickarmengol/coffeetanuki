{{define "htmxfix"}}
<script>
document.body.addEventListener('htmx:beforeSwap', function(evt) {
    if(evt.detail.xhr.status === 422){
        // allow 422 responses to swap as we are using this as a signal that
        // a form was submitted with bad data and want to rerender with the
        // errors
        //
        // set isError to false to avoid error logging in console
        evt.detail.shouldSwap = true;
        evt.detail.isError = true;
    }
});
document.body.addEventListener('htmx:afterRequest', function (evt) {
    if (evt.detail.successful) {
        const errorTarget = document.getElementById("htmx-error")
        // Successful request, clear out alert
        errorTarget.setAttribute("hidden", "true")
        errorTarget.innerText = "";
    } else if (evt.detail.failed && evt.detail.xhr) {
        const errorTarget = document.getElementById("htmx-error")
        // Server error with response contents, equivalent to htmx:responseError
        console.warn("Error", evt.detail)
        const xhr = evt.detail.xhr;
        errorTarget.innerText = `Unexpected error: ${xhr.status} - ${xhr.statusText}`;
        errorTarget.removeAttribute("hidden");
    } else {
        // Unspecified failure, usually caused by network error
        // console.error("Unexpected htmx error", evt.detail)
        // errorTarget.innerText = "Unexpected error, check your connection and try to refresh the page.";
        // errorTarget.removeAttribute("hidden");
    }
});
</script>
{{end}}
